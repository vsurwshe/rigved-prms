// docker: new plugin 
buildscript {
	dependencies {
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.oxygenglobal.microservices'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/libs-release" }
}
ext {
	set('springCloudVersion', 'Hoxton.RELEASE')
}

jar {
    baseName = "${project.name}"
    version =  '0.1.0'
	enabled=true
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-aop')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-jersey')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('io.springfox:springfox-swagger-ui:2.9.0') 
	implementation('io.springfox:springfox-swagger2:2.9.0')
	implementation('org.springframework.boot:spring-boot-starter-batch')
	compileOnly('org.springframework.hateoas:spring-hateoas')
	compileOnly('com.fasterxml.jackson.core:jackson-databind:2.9.3')
	runtimeOnly('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')
	annotationProcessor 'org.projectlombok:lombok'
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.batch:spring-batch-test')
	compile group: 'rocks.spiffy', name: 'HateoasUtils', version:'1.1.0'
	compile group: 'org.owasp.encoder', name: 'encoder', version:'1.2.1'
	compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version:'4.11'
	compile('org.modelmapper:modelmapper:2.3.0')
	testCompile('org.springframework.security:spring-security-test')
	compile fileTree(include: ['*.jar'], dir: 'lib')
	compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '2.5.0'
	compile group: 'org.apache.ws.commons.axiom', name: 'axiom-api', version: '1.2.20'
	compile group: 'org.apache.ws.commons.axiom', name: 'axiom-impl', version: '1.2.20'
	compile group: 'org.apache.ws.commons.axiom', name: 'axiom-dom', version: '1.2.20'
	compile group: 'org.apache.ws.commons.axiom', name: 'axiom-jaxb', version: '1.2.20'
	compile group: 'org.apache.ws.commons.axiom', name: 'testutils', version: '1.2.20'
    compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.4.1'
	compile group: 'org.apache.axis2', name: 'axis2-adb', version: '1.7.7'
	compile group: 'org.apache.axis2', name: 'axis2-adb-codegen', version: '1.7.7'
	compile group: 'org.apache.axis2', name: 'axis2-kernel', version: '1.7.7'
	compile group: 'org.apache.axis2', name: 'axis2-transport-http', version: '1.7.7'
	compile group: 'org.apache.axis2', name: 'axis2-transport-local', version: '1.7.7'
	compile group: 'org.apache.axis2', name: 'axis2-xmlbeans', version: '1.7.7'
	compile group: 'com.google.zxing', name: 'core', version: '3.3.3'
	compile group: 'com.google.zxing', name: 'javase', version: '3.3.3'
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
	compile group: 'org.apache.poi', name: 'poi', version: '3.9'
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
	compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.9'
	compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '2.3.0'
	
	
	
	compile("org.springframework.boot:spring-boot-starter") {
		exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
	}

		

	
	implementation 'org.springframework.geode:spring-geode-starter:1.2.1.RELEASE'
	runtime("org.springframework.shell:spring-shell:1.2.0.RELEASE")
	
	compile 'javax.servlet:javax.servlet-api'
	constraints {
        compile('javax.servlet:javax.servlet-api:4.0.1') {
            
        }
    }
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-commons', version: '1.0.0.RELEASE'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// docker: plugin apply  
apply plugin: 'com.palantir.docker'
apply plugin: 'org.springframework.boot'

// docker: new task docker 
docker {
    dependsOn build
    name "${project.name}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}